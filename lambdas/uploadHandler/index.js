"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
// lambdas/uploadHandler/index.ts
const aws_sdk_1 = require("aws-sdk");
const sqs = new aws_sdk_1.SQS();
const dynamodb = new aws_sdk_1.DynamoDB.DocumentClient();
const handler = async (event) => {
    const body = JSON.parse(event.body);
    const { fileId, originalName, bucket, key } = body;
    await dynamodb.put({
        TableName: process.env.TABLE_NAME,
        Item: {
            fileId,
            originalName,
            status: 'pending',
            timestamp: Date.now(),
        },
    }).promise();
    await sqs.sendMessage({
        QueueUrl: process.env.QUEUE_URL,
        MessageBody: JSON.stringify({ fileId, bucket, key }),
    }).promise();
    return {
        statusCode: 200,
        body: JSON.stringify({ message: 'File received and queued for processing.' }),
    };
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBaUM7QUFDakMscUNBQXdDO0FBRXhDLE1BQU0sR0FBRyxHQUFHLElBQUksYUFBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxRQUFRLEdBQUcsSUFBSSxrQkFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBRXhDLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFVLEVBQUUsRUFBRTtJQUMxQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBRW5ELE1BQU0sUUFBUSxDQUFDLEdBQUcsQ0FBQztRQUNqQixTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFXO1FBQ2xDLElBQUksRUFBRTtZQUNKLE1BQU07WUFDTixZQUFZO1lBQ1osTUFBTSxFQUFFLFNBQVM7WUFDakIsU0FBUyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7U0FDdEI7S0FDRixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7SUFFYixNQUFNLEdBQUcsQ0FBQyxXQUFXLENBQUM7UUFDcEIsUUFBUSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBVTtRQUNoQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7S0FDckQsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBRWIsT0FBTztRQUNMLFVBQVUsRUFBRSxHQUFHO1FBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxPQUFPLEVBQUUsMENBQTBDLEVBQUUsQ0FBQztLQUM5RSxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBdkJXLFFBQUEsT0FBTyxXQXVCbEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsYW1iZGFzL3VwbG9hZEhhbmRsZXIvaW5kZXgudHNcclxuaW1wb3J0IHsgU1FTLCBEeW5hbW9EQiB9IGZyb20gJ2F3cy1zZGsnO1xyXG5cclxuY29uc3Qgc3FzID0gbmV3IFNRUygpO1xyXG5jb25zdCBkeW5hbW9kYiA9IG5ldyBEeW5hbW9EQi5Eb2N1bWVudENsaWVudCgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhhbmRsZXIgPSBhc3luYyAoZXZlbnQ6IGFueSkgPT4ge1xyXG4gIGNvbnN0IGJvZHkgPSBKU09OLnBhcnNlKGV2ZW50LmJvZHkpO1xyXG4gIGNvbnN0IHsgZmlsZUlkLCBvcmlnaW5hbE5hbWUsIGJ1Y2tldCwga2V5IH0gPSBib2R5O1xyXG5cclxuICBhd2FpdCBkeW5hbW9kYi5wdXQoe1xyXG4gICAgVGFibGVOYW1lOiBwcm9jZXNzLmVudi5UQUJMRV9OQU1FISxcclxuICAgIEl0ZW06IHtcclxuICAgICAgZmlsZUlkLFxyXG4gICAgICBvcmlnaW5hbE5hbWUsXHJcbiAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxyXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXHJcbiAgICB9LFxyXG4gIH0pLnByb21pc2UoKTtcclxuXHJcbiAgYXdhaXQgc3FzLnNlbmRNZXNzYWdlKHtcclxuICAgIFF1ZXVlVXJsOiBwcm9jZXNzLmVudi5RVUVVRV9VUkwhLFxyXG4gICAgTWVzc2FnZUJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZmlsZUlkLCBidWNrZXQsIGtleSB9KSxcclxuICB9KS5wcm9taXNlKCk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzdGF0dXNDb2RlOiAyMDAsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG1lc3NhZ2U6ICdGaWxlIHJlY2VpdmVkIGFuZCBxdWV1ZWQgZm9yIHByb2Nlc3NpbmcuJyB9KSxcclxuICB9O1xyXG59O1xyXG4iXX0=